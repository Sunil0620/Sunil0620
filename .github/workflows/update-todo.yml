name: Todoist Readme

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *" # Runs every 2 hours

jobs:
  update-readme:
    name: Update README with Todoist stats
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch Todoist Stats and Save to Env
        run: |
          echo "Fetching Todoist stats..."
          TODOIST_RESPONSE_FILE=$(mktemp)
          if ! curl -sS -H "Authorization: Bearer ${{ secrets.TODOIST_API_KEY }}" \
            "https://api.todoist.com/sync/v9/completed/get_stats" -o "$TODOIST_RESPONSE_FILE"; then
            echo "[todoist] Failed to fetch Todoist API (curl error). Skipping README update."
            rm -f "$TODOIST_RESPONSE_FILE"
            exit 0
          fi

          # Validate JSON before continuing. If invalid, skip update to avoid corrupting README.
          if ! jq -e . "$TODOIST_RESPONSE_FILE" >/dev/null 2>&1; then
            echo "[todoist] Received invalid JSON from Todoist API. Skipping README update."
            rm -f "$TODOIST_RESPONSE_FILE"
            exit 0
          fi

          TODOIST_DATA=$(cat "$TODOIST_RESPONSE_FILE")

          COMPLETED_TODAY=$(echo "$TODOIST_DATA" | jq -r '.days_items[0].total_completed // 0')
          TOTAL_COMPLETED=$(echo "$TODOIST_DATA" | jq -r '.completed_count // 0')
          KARMA_POINTS=$(echo "$TODOIST_DATA" | jq -r '.karma // 0')
          LONGEST_STREAK=$(echo "$TODOIST_DATA" | jq -r '.goals.max_daily_streak.count // 0')
          CURRENT_STREAK=$(echo "$TODOIST_DATA" | jq -r '.goals.current_daily_streak.count // 0')

          COMPLETED_TODAY=${COMPLETED_TODAY%.*}
          TOTAL_COMPLETED=${TOTAL_COMPLETED%.*}
          KARMA_POINTS=${KARMA_POINTS%.*}
          LONGEST_STREAK=${LONGEST_STREAK%.*}
          CURRENT_STREAK=${CURRENT_STREAK%.*}

          # Print values for debugging (these are numeric and safe). Do NOT echo secrets/tokens.
          echo "KARMA_POINTS=$KARMA_POINTS"
          echo "COMPLETED_TODAY=$COMPLETED_TODAY"
          echo "TOTAL_COMPLETED=$TOTAL_COMPLETED"
          echo "LONGEST_STREAK=$LONGEST_STREAK"
          echo "CURRENT_STREAK=$CURRENT_STREAK"

          # Replace only the block between the TODO-IST markers to avoid accidental matches elsewhere.
            awk -v kp="$KARMA_POINTS" -v ct="$COMPLETED_TODAY" -v tot="$TOTAL_COMPLETED" -v ls="$LONGEST_STREAK" -v cs="$CURRENT_STREAK" '
            /<!-- TODO-IST:START -->/ { print; print "üèÜ  " kp " Karma Points           "; print "üå∏  Completed " ct " tasks today           "; print "‚úÖ  Completed " tot " tasks so far           "; print "‚è≥  Longest streak is " ls " days           "; print "üî•  Current streak is " cs " days"; skip=1; next }
          /<!-- TODO-IST:END -->/ { if(skip){ print; skip=0; next } }
          { if(!skip) print }
          ' README.md > README.tmp && mv README.tmp README.md

          # cleanup temp response file
          rm -f "$TODOIST_RESPONSE_FILE"
      - name: Commit and Push Changes
        run: |
          git config --local user.email "sunilsaini5652@gmail.com"
          git config --local user.name "Sunil0620"

          if [[ -n $(git status --porcelain) ]]; then
            git add README.md
            git commit -m "üìù Update Todoist stats"
            git push origin main
          else
            echo "No changes to commit"
          fi
