name: Todoist Readme

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *" # Runs every 2 hours

jobs:
  update-readme:
    name: Update README with Todoist stats
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch Todoist Stats
        run: |
          echo "Fetching Todoist stats..."
          TODOIST_DATA=$(curl -s "https://api.todoist.com/sync/v9/completed/get_stats" \
            -H "Authorization: Bearer ${{ secrets.TODOIST_API_KEY }}")

          if [[ -z "$TODOIST_DATA" || "$TODOIST_DATA" == "null" ]]; then
            echo "Failed to fetch data from Todoist API"
            exit 1
          fi

          COMPLETED_TODAY=$(echo "$TODOIST_DATA" | jq -r '.days_items[0].total_completed // 0')
          TOTAL_COMPLETED=$(echo "$TODOIST_DATA" | jq -r '.completed_count // 0')
          KARMA_POINTS=$(echo "$TODOIST_DATA" | jq -r '.karma // 0')
          LONGEST_STREAK=$(echo "$TODOIST_DATA" | jq -r '.goals.max_daily_streak.count // 0')
          CURRENT_STREAK=$(echo "$TODOIST_DATA" | jq -r '.goals.current_daily_streak.count // 0')

          # If no streak data, calculate based on activity (simplified)
          if [[ "$LONGEST_STREAK" == "0" || "$LONGEST_STREAK" == "null" ]]; then
            if [[ "$COMPLETED_TODAY" -gt "0" && "$KARMA_POINTS" -gt "100" ]]; then
              LONGEST_STREAK="1"
            fi
          fi

          # Ensure longest streak is at least as high as current streak
          if [[ "$CURRENT_STREAK" -gt "$LONGEST_STREAK" ]]; then
            LONGEST_STREAK="$CURRENT_STREAK"
          fi

          # Trim decimals if any
          COMPLETED_TODAY=${COMPLETED_TODAY%.*}
          TOTAL_COMPLETED=${TOTAL_COMPLETED%.*}
          KARMA_POINTS=${KARMA_POINTS%.*}
          LONGEST_STREAK=${LONGEST_STREAK%.*}
          CURRENT_STREAK=${CURRENT_STREAK%.*}

          # Print stats with numbers in blue using ANSI escape codes
          BLUE='\033[1;34m'
          NC='\033[0m' # No Color
          echo "‚úÖ Stats:"
          echo -e "  - Completed Today: ${BLUE}$COMPLETED_TODAY${NC}"
          echo -e "  - Total Completed: ${BLUE}$TOTAL_COMPLETED${NC}"
          echo -e "  - Karma Points: ${BLUE}$KARMA_POINTS${NC}"
          echo -e "  - Longest Streak: ${BLUE}$LONGEST_STREAK${NC} days"
          echo -e "  - Current Streak: ${BLUE}$CURRENT_STREAK${NC} days"

      - name: Commit and Push Changes
        run: |
          git config --local user.email "sunilsaini5652@gmail.com"
          git config --local user.name "Sunil0620"

          # Update README.md with Todoist stats (before git add)
          sed -i "s|üèÜ Karma Points:.*|\nüèÜ Karma Points: $KARMA_POINTS|" README.md
          sed -i "s|üå∏ Completed Today:.*|\nüå∏ Completed Today: $COMPLETED_TODAY|" README.md
          sed -i "s|‚úÖ Total Completed:.*|\n‚úÖ Total Completed: $TOTAL_COMPLETED|" README.md
          sed -i "s|‚è≥ Longest Streak:.*|\n‚è≥ Longest Streak: ${LONGEST_STREAK} days|" README.md
          sed -i "s|üî• Current Streak:.*|\nüî• Current Streak: ${CURRENT_STREAK} days|" README.md

          if [[ -n $(git status --porcelain) ]]; then
            git add README.md
            git commit -m "üìù Update Todoist stats"
            git push origin main
          else
            echo "No changes to commit"
          fi
